import speech_recognition as sr
import webbrowser
import pyttsx3
import requests
from openai import OpenAI
from gtts import gTTS
import pygame
import os

#We have to buy "APIkey" to ingtegrate OpenAI
#We have to buy subscription of google cloud after sometime to run "gTTS"
# pip install pocketsphinx
# init recognizer and tts engine
recognizer = sr.Recognizer()
engine = pyttsx3.init()
import musicLibrary
def speak_old(text):
    engine.say(text)
    engine.runAndWait()

def speak(text):
    
    tts = gTTS(text)
    tts.save('temp.mp3')
    import pygame

    # Initialize Pygame mixer
    pygame.mixer.init()

    # Load the MP3 file

    pygame.mixer.music.load('temp.mp3')

    # Play the MP3 file
    pygame.mixer.music.play()

    # Keep the program running until the music stops playing
    while pygame.mixer.music.get_busy():
        pygame.time.Clock().tick(10)

    os.remove("temp.mp3")
def aiProcess(command):
    client = OpenAI(api_key="#use your API key")

    completion = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "You are a virtual assistant named Jarvis skilled in general tasks like Alexa and Google Cloud.Give short responses please"},
            {"role": "user", "content": command}
            ]
    )
    
    return completion.choices[0].message.content

newsapi = "#use your own api news key"

def processCommand(c):
    if "open google" in c.lower():
        webbrowser.open("https://google.com")
    elif "open facebook" in c.lower():
        webbrowser.open("https://facebook.com")
    elif "open youtube" in c.lower():
        webbrowser.open("https://youtube.com")
    elif "open linkedin" in c.lower():
        webbrowser.open("https://linkedin.com")
    elif c.lower().startswith("play"):
        song = c.lower().split(" ")[1]
        link = musicLibrary.music[song]
        webbrowser.open(link)

    elif "news" in c.lower():
          url = f"https://newsapi.org/v2/top-headlines?country=us&apiKey={newsapi}"
          r = requests.get(url)
          if r.status_code == 200:
                # Parse the JSON response
                data = r. json( )

                # Extract the articles
                articles = data.get('articles', [])

                # Print the headlines
                for article in articles:
                    speak(article['title'])
    
    else:
        #Let OpenAI handle the request
        output =  aiProcess(c)
        speak(output)

if __name__ == "__main__":
    speak("Initializing Jarvis....")

    while True:
        try:
            with sr.Microphone() as source:
                print("Listening...")
                audio = recognizer.listen(source, timeout=5, phrase_time_limit=5)
                word = recognizer.recognize_google(audio)

            print("You said:", word)

            # check wake word
            if word.lower() == "jarvis":
                speak("Ya...")
                with sr.Microphone() as source:
                    print("Jarvis Active...")
                    audio = recognizer.listen(source, timeout=5, phrase_time_limit=5)
                    command = recognizer.recognize_google(audio)

                print("Command received:", command)
                processCommand(command)

        except Exception as e:
            print("Error:", e)

